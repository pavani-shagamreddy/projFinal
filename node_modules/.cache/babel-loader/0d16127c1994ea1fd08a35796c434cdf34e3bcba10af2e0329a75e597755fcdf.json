{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ps3860\\\\my-learning\\\\my-learning\\\\src\\\\components\\\\ViewResource.js\";\nimport obj1 from \"./objects\";\nimport React from \"react\";\nimport { useCollapse } from \"react-collapsed\";\nimport \"./ViewResource.css\";\n// function InnerCollapsible() {\n//   const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\n//   return (\n//     <div className=\"collapsible\">\n//       <div className=\"header\" {...getToggleProps()}>\n//         {isExpanded ? \"Collapse\" : \"Expand\"}\n//       </div>\n//       <div {...getCollapseProps()}>\n//         <div className=\"content\">\n//           Now you can see the hidden content. <br />\n//           <br />\n//           Click <i>Collapse</i> to hide this content...\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// function Collapsible() {\n//   const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\n//   return (\n//     <div className=\"collapsible\">\n//       <div className=\"header\" {...getToggleProps()}>\n//         {isExpanded ? \"Close\" : \"Open\"}\n//       </div>\n//       <div {...getCollapseProps()}>\n//         <div className=\"content\">\n//           Now you can see the hidden content. <br />\n//           <br />\n//           Click <i>Close</i> to hide everything... <br />\n//           <br />\n//           <InnerCollapsible />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ViewResource() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"accordion\",\n    id: \"accordionExample\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"accordion-item\",\n      children: Object.keys(obj1).map(p => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"accordion-header\",\n          id: \"headingOne\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"accordion-button\",\n            type: \"button\",\n            \"data-bs-toggle\": \"collapse\",\n            \"data-bs-target\": \"#collapseOne\",\n            \"aria-expanded\": \"true\",\n            \"aria-controls\": \"collapseOne\",\n            children: /*#__PURE__*/_jsxDEV(\"li\", {\n              children: p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), Object.keys(obj1[p]).map(n => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"collapseOne\",\n            class: \"accordion-collapse collapse show\",\n            \"aria-labelledby\": \"headingOne\",\n            \"data-bs-parent\": \"#accordionExample\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              class: \"accordion-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [console.log(n, obj1[p][n]), obj1[p][n].map(k => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: k\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = ViewResource;\nexport default ViewResource;\nvar _c;\n$RefreshReg$(_c, \"ViewResource\");","map":{"version":3,"names":["obj1","React","useCollapse","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewResource","class","id","children","Object","keys","map","p","type","fileName","_jsxFileName","lineNumber","columnNumber","n","console","log","k","_c","$RefreshReg$"],"sources":["C:/Users/ps3860/my-learning/my-learning/src/components/ViewResource.js"],"sourcesContent":["import obj1 from \"./objects\";\r\nimport React from \"react\";\r\nimport { useCollapse } from \"react-collapsed\";\r\nimport \"./ViewResource.css\";\r\n// function InnerCollapsible() {\r\n//   const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\r\n//   return (\r\n//     <div className=\"collapsible\">\r\n//       <div className=\"header\" {...getToggleProps()}>\r\n//         {isExpanded ? \"Collapse\" : \"Expand\"}\r\n//       </div>\r\n//       <div {...getCollapseProps()}>\r\n//         <div className=\"content\">\r\n//           Now you can see the hidden content. <br />\r\n//           <br />\r\n//           Click <i>Collapse</i> to hide this content...\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// function Collapsible() {\r\n//   const { getCollapseProps, getToggleProps, isExpanded } = useCollapse();\r\n//   return (\r\n//     <div className=\"collapsible\">\r\n//       <div className=\"header\" {...getToggleProps()}>\r\n//         {isExpanded ? \"Close\" : \"Open\"}\r\n//       </div>\r\n//       <div {...getCollapseProps()}>\r\n//         <div className=\"content\">\r\n//           Now you can see the hidden content. <br />\r\n//           <br />\r\n//           Click <i>Close</i> to hide everything... <br />\r\n//           <br />\r\n//           <InnerCollapsible />\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\nfunction ViewResource() {\r\n  return (\r\n    <div class=\"accordion\" id=\"accordionExample\">\r\n      <ul class=\"accordion-item\">\r\n        {Object.keys(obj1).map((p) => (\r\n          <>\r\n            <h2 class=\"accordion-header\" id=\"headingOne\">\r\n              <button\r\n                class=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target=\"#collapseOne\"\r\n                aria-expanded=\"true\"\r\n                aria-controls=\"collapseOne\"\r\n              >\r\n                <li>{p}</li>\r\n              </button>\r\n            </h2>\r\n\r\n            {Object.keys(obj1[p]).map((n) => (\r\n              <>\r\n                <div\r\n                  id=\"collapseOne\"\r\n                  class=\"accordion-collapse collapse show\"\r\n                  aria-labelledby=\"headingOne\"\r\n                  data-bs-parent=\"#accordionExample\"\r\n                >\r\n                  <ul class=\"accordion-body\">\r\n                    <li>{n}</li>\r\n                    <ul>\r\n                      {console.log(n, obj1[p][n])}\r\n                      {obj1[p][n].map((k) => (\r\n                        <li>{k}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            ))}\r\n          </>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewResource;\r\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,WAAW;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAO,oBAAoB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,YAAYA,CAAA,EAAG;EACtB,oBACEH,OAAA;IAAKI,KAAK,EAAC,WAAW;IAACC,EAAE,EAAC,kBAAkB;IAAAC,QAAA,eAC1CN,OAAA;MAAII,KAAK,EAAC,gBAAgB;MAAAE,QAAA,EACvBC,MAAM,CAACC,IAAI,CAACZ,IAAI,CAAC,CAACa,GAAG,CAAEC,CAAC,iBACvBV,OAAA,CAAAE,SAAA;QAAAI,QAAA,gBACEN,OAAA;UAAII,KAAK,EAAC,kBAAkB;UAACC,EAAE,EAAC,YAAY;UAAAC,QAAA,eAC1CN,OAAA;YACEI,KAAK,EAAC,kBAAkB;YACxBO,IAAI,EAAC,QAAQ;YACb,kBAAe,UAAU;YACzB,kBAAe,cAAc;YAC7B,iBAAc,MAAM;YACpB,iBAAc,aAAa;YAAAL,QAAA,eAE3BN,OAAA;cAAAM,QAAA,EAAKI;YAAC;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAM;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACL;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACN,EAEJR,MAAM,CAACC,IAAI,CAACZ,IAAI,CAACc,CAAC,CAAC,CAAC,CAACD,GAAG,CAAEO,CAAC,iBAC1BhB,OAAA,CAAAE,SAAA;UAAAI,QAAA,eACEN,OAAA;YACEK,EAAE,EAAC,aAAa;YAChBD,KAAK,EAAC,kCAAkC;YACxC,mBAAgB,YAAY;YAC5B,kBAAe,mBAAmB;YAAAE,QAAA,eAElCN,OAAA;cAAII,KAAK,EAAC,gBAAgB;cAAAE,QAAA,gBACxBN,OAAA;gBAAAM,QAAA,EAAKU;cAAC;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAM,eACZf,OAAA;gBAAAM,QAAA,GACGW,OAAO,CAACC,GAAG,CAACF,CAAC,EAAEpB,IAAI,CAACc,CAAC,CAAC,CAACM,CAAC,CAAC,CAAC,EAC1BpB,IAAI,CAACc,CAAC,CAAC,CAACM,CAAC,CAAC,CAACP,GAAG,CAAEU,CAAC,iBAChBnB,OAAA;kBAAAM,QAAA,EAAKa;gBAAC;kBAAAP,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,QACP,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACD,iBAET,CAAC;MAAA,gBAEL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACK,EAAA,GA5CQjB,YAAY;AA8CrB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}